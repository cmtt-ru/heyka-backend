{{ $rtp_min_port := pluck .Values.global.env .Values.janus.rtp_port.min | first | default .Values.janus.rtp_port.min._default }}
{{ $rtp_max_port := pluck .Values.global.env .Values.janus.rtp_port.max | first | default .Values.janus.rtp_port.max._default }}

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: janus
  labels:
    app: janus
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/janus-config.yaml") . | sha256sum }}
spec:
  replicas: {{ pluck .Values.global.env .Values.janus.replicas | first | default .Values.janus.replicas._default }}
  selector:
    matchLabels:
      app: janus
  template:
    metadata:
      labels:
        app: janus
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/janus-config.yaml") . | sha256sum }}
    spec:
      hostNetwork: true
      nodeSelector:
        node-role.kubernetes.io/janus: ""
      tolerations:
      - key: node-role.kubernetes.io/janus
        effect: NoSchedule
      imagePullSecrets:
        - name: registrysecret
      containers:
        - name: janus
{{ tuple "janus" . | include "werf_container_image" | indent 10 }}
          command: ["/entrypoint.sh"]
          resources:
            limits:
              memory: 3Gi
            requests:
              memory: 1Gi
          env:
{{ tuple "janus" . | include "werf_container_env" | indent 12 }}
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          ports:
            - containerPort: {{ pluck .Values.global.env .Values.janus.admin_port | first | default .Values.janus.admin_port._default }}
              name: admin
            - containerPort: 8088
              name: web
            - containerPort: 8188
              name: websocket
{{- range $i, $e := until (add 1 (sub $rtp_max_port $rtp_min_port) | int) }}
            - containerPort: {{ add $rtp_min_port $i }}
              name: {{ printf "rtp%d" $i }}
              protocol: UDP
{{- end }}
          volumeMounts:
            - name: configmap
              mountPath: /opt/janus/etc/janus
      volumes:
        - name: configmap
          configMap:
            name: janus-config

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: janus
  name: {{ pluck .Values.global.env .Values.janus.host | first | default .Values.janus.host._default }}
spec:
  ports:
    - targetPort: admin
      name: admin
      port: {{ pluck .Values.global.env .Values.janus.admin_port | first | default .Values.janus.admin_port._default }}
    - targetPort: web
      name: web
      port: 8088
    - targetPort: websocket
      port: 8188
      name: websocket
  selector:
    app: janus
